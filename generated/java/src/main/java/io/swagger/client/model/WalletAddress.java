/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WalletAddress
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-13T08:37:33.189Z")
public class WalletAddress {
  @SerializedName("address")
  private String address = null;

  @SerializedName("balance")
  private Long balance = null;

  @SerializedName("confirmations")
  private Integer confirmations = null;

  /**
   * Gets or Sets context
   */
  @JsonAdapter(ContextEnum.Adapter.class)
  public enum ContextEnum {
    ARBITRATOR("ARBITRATOR"),
    
    AVAILABLE("AVAILABLE"),
    
    OFFER_FUNDING("OFFER_FUNDING"),
    
    RESERVED_FOR_TRADE("RESERVED_FOR_TRADE"),
    
    MULTI_SIG("MULTI_SIG"),
    
    TRADE_PAYOUT("TRADE_PAYOUT");

    private String value;

    ContextEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContextEnum fromValue(String text) {
      for (ContextEnum b : ContextEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ContextEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContextEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContextEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ContextEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("context")
  private ContextEnum context = null;

  @SerializedName("offerId")
  private String offerId = null;

  public WalletAddress address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public WalletAddress balance(Long balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public Long getBalance() {
    return balance;
  }

  public void setBalance(Long balance) {
    this.balance = balance;
  }

  public WalletAddress confirmations(Integer confirmations) {
    this.confirmations = confirmations;
    return this;
  }

   /**
   * Get confirmations
   * @return confirmations
  **/
  @ApiModelProperty(value = "")
  public Integer getConfirmations() {
    return confirmations;
  }

  public void setConfirmations(Integer confirmations) {
    this.confirmations = confirmations;
  }

  public WalletAddress context(ContextEnum context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(value = "")
  public ContextEnum getContext() {
    return context;
  }

  public void setContext(ContextEnum context) {
    this.context = context;
  }

  public WalletAddress offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

   /**
   * Get offerId
   * @return offerId
  **/
  @ApiModelProperty(value = "")
  public String getOfferId() {
    return offerId;
  }

  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletAddress walletAddress = (WalletAddress) o;
    return Objects.equals(this.address, walletAddress.address) &&
        Objects.equals(this.balance, walletAddress.balance) &&
        Objects.equals(this.confirmations, walletAddress.confirmations) &&
        Objects.equals(this.context, walletAddress.context) &&
        Objects.equals(this.offerId, walletAddress.offerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, balance, confirmations, context, offerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletAddress {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    confirmations: ").append(toIndentedString(confirmations)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

