/**
 * The Bisq API
 * API for the Bisq exchange
 *
 * OpenAPI spec version: 1
 * Contact: Use the Bisq's project support channels
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import PriceDetail from './PriceDetail';





/**
* The OfferDetail model module.
* @module model/OfferDetail
* @version 1
*/
export default class OfferDetail {
    /**
    * Constructs a new <code>OfferDetail</code>.
    * @alias module:model/OfferDetail
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>OfferDetail</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OfferDetail} obj Optional instance to populate.
    * @return {module:model/OfferDetail} The populated <code>OfferDetail</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferDetail();

            
            
            

            if (data.hasOwnProperty('offer_id')) {
                obj['offer_id'] = ApiClient.convertToType(data['offer_id'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('arbitrators')) {
                obj['arbitrators'] = ApiClient.convertToType(data['arbitrators'], ['String']);
            }
            if (data.hasOwnProperty('offerer')) {
                obj['offerer'] = ApiClient.convertToType(data['offerer'], 'String');
            }
            if (data.hasOwnProperty('btc_amount')) {
                obj['btc_amount'] = ApiClient.convertToType(data['btc_amount'], 'String');
            }
            if (data.hasOwnProperty('min_btc_amount')) {
                obj['min_btc_amount'] = ApiClient.convertToType(data['min_btc_amount'], 'String');
            }
            if (data.hasOwnProperty('other_amount')) {
                obj['other_amount'] = ApiClient.convertToType(data['other_amount'], 'String');
            }
            if (data.hasOwnProperty('other_currency')) {
                obj['other_currency'] = ApiClient.convertToType(data['other_currency'], 'String');
            }
            if (data.hasOwnProperty('price_detail')) {
                obj['price_detail'] = PriceDetail.constructFromObject(data['price_detail']);
            }
        }
        return obj;
    }

    /**
    * @member {String} offer_id
    */
    offer_id = undefined;
    /**
    * @member {module:model/OfferDetail.DirectionEnum} direction
    */
    direction = undefined;
    /**
    * @member {module:model/OfferDetail.StateEnum} state
    */
    state = undefined;
    /**
    * @member {Date} created
    */
    created = undefined;
    /**
    * @member {Array.<String>} arbitrators
    */
    arbitrators = undefined;
    /**
    * @member {String} offerer
    */
    offerer = undefined;
    /**
    * @member {String} btc_amount
    */
    btc_amount = undefined;
    /**
    * @member {String} min_btc_amount
    */
    min_btc_amount = undefined;
    /**
    * @member {String} other_amount
    */
    other_amount = undefined;
    /**
    * @member {String} other_currency
    */
    other_currency = undefined;
    /**
    * @member {module:model/PriceDetail} price_detail
    */
    price_detail = undefined;






    /**
    * Allowed values for the <code>direction</code> property.
    * @enum {String}
    * @readonly
    */
    static DirectionEnum = {
    
        /**
         * value: "BUY"
         * @const
         */
        "BUY": "BUY",
    
        /**
         * value: "SELL"
         * @const
         */
        "SELL": "SELL"    
    };

    /**
    * Allowed values for the <code>state</code> property.
    * @enum {String}
    * @readonly
    */
    static StateEnum = {
    
        /**
         * value: "UNKNOWN"
         * @const
         */
        "UNKNOWN": "UNKNOWN",
    
        /**
         * value: "OFFER_FEE_PAID"
         * @const
         */
        "OFFER_FEE_PAID": "OFFER_FEE_PAID",
    
        /**
         * value: "AVAILABLE"
         * @const
         */
        "AVAILABLE": "AVAILABLE",
    
        /**
         * value: "NOT_AVAILABLE"
         * @const
         */
        "NOT_AVAILABLE": "NOT_AVAILABLE",
    
        /**
         * value: "REMOVED"
         * @const
         */
        "REMOVED": "REMOVED",
    
        /**
         * value: "MAKER_OFFLINE"
         * @const
         */
        "MAKER_OFFLINE": "MAKER_OFFLINE"    
    };



}


